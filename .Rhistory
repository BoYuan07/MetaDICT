width = 0.7
) +
stat_summary(
fun.data = mean_se,
geom = "errorbar",
position = position_dodge(width = 0.9),
width = 0.2
) +
scale_fill_manual(values = method_colors) +
scale_color_manual(values = darker_set3) +
labs(
x = "Confounding Level",
y = "R2 (Bray-Curtis)"
) +
facet_wrap(~ Type, nrow = 1) +
scale_y_continuous(breaks = seq(0, 1, 0.1)) +
ylim(0,0.5)+
theme_bw() +
theme(
plot.title    = element_text(size = 14, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.title.x  = element_text(size = 12),
axis.text.x   = element_text(size = 10),
axis.title.y  = element_text(size = 12),
axis.text.y   = element_text(size = 10),
legend.title  = element_text(size = 10),
legend.text   = element_text(size = 9),
strip.text    = element_text(size = 12)
)
ggsave("../fig_r2/fig2cd_bar.jpeg")
aa1 = AA
ggplot(aa1, aes(x = Covariate, y = R2, fill = Method, color = Method)) +
stat_summary(
fun = mean,
geom = "bar",
position = position_dodge(width = 0.9),
width = 0.7
) +
stat_summary(
fun.data = mean_se,
geom = "errorbar",
position = position_dodge(width = 0.9),
width = 0.2
) +
scale_fill_manual(values = method_colors) +
scale_color_manual(values = darker_set3) +
labs(
x = "Confounding Level",
y = "R2 (Bray-Curtis)"
) +
facet_wrap(~ Type, nrow = 1) +
scale_y_continuous(breaks = seq(0, 1, 0.1)) +
theme_bw() +
theme(
plot.title    = element_text(size = 14, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.title.x  = element_text(size = 12),
axis.text.x   = element_text(size = 10),
axis.title.y  = element_text(size = 12),
axis.text.y   = element_text(size = 10),
legend.title  = element_text(size = 10),
legend.text   = element_text(size = 9),
strip.text    = element_text(size = 12)
)
ggsave("../fig_r2/fig2cd_bar.jpeg")
# Create a subtitle that lists all unique covariate values
aa1 = AA
ggplot(aa1, aes(x = Covariate, y = R2, fill = Method, color = Method)) +
geom_boxplot(outlier.shape = NA) +
scale_fill_manual(values = method_colors) +
scale_color_manual(values = darker_set3) +
labs(
x = "Confounding Level",
y = "R2 (Bray-Curtis)") +
facet_wrap(~ Type, nrow = 1) +
scale_y_continuous(breaks = seq(0, 1, 0.1)) +
theme_bw() +
ylim(0,0.5)+
theme(
plot.title    = element_text(size = 14,  hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.title.x  = element_text(size = 12),
axis.text.x   = element_text(size = 10),
axis.title.y  = element_text(size = 12),
axis.text.y   = element_text(size = 10),
legend.title  = element_text(size = 10),
legend.text   = element_text(size = 9),
strip.text    = element_text(size = 12)
)
ggsave("../fig_r2/fig2cd_box.jpeg")
# Create a subtitle that lists all unique covariate values
aa1 = AA
ggplot(aa1, aes(x = Covariate, y = R2, fill = Method, color = Method)) +
geom_boxplot(outlier.shape = NA) +
scale_fill_manual(values = method_colors) +
scale_color_manual(values = darker_set3) +
labs(
x = "Confounding Level",
y = "R2 (Bray-Curtis)") +
facet_wrap(~ Type, nrow = 1) +
scale_y_continuous(breaks = seq(0, 1, 0.1)) +
theme_bw() +
theme(
plot.title    = element_text(size = 14,  hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.title.x  = element_text(size = 12),
axis.text.x   = element_text(size = 10),
axis.title.y  = element_text(size = 12),
axis.text.y   = element_text(size = 10),
legend.title  = element_text(size = 10),
legend.text   = element_text(size = 9),
strip.text    = element_text(size = 12)
)
ggsave("../fig_r2/fig2cd_box.jpeg")
View(AA)
filter_case = tibble()
filter_case = c()
for(k in 1:19760/40){
if(AA$R2[40*(k-1)+8]>0.1){
filter_case = rbind(filter_case, AA[40*(k-1)+1:40*k,])
}
}
filter_case = c()
for(k in 1:(19760/40){
filter_case = c()
for(k in 1:(19760/40)}{
filter_case = c()
for(k in 1:(19760/40)){
if(AA$R2[(40*(k-1)+8)]>0.1){
filter_case = rbind(filter_case, AA[40*(k-1)+1:40*k,])
}
}
9960/40
# Create a subtitle that lists all unique covariate values
aa1 = filter_case
ggplot(aa1, aes(x = Covariate, y = R2, fill = Method, color = Method)) +
geom_boxplot(outlier.shape = NA) +
scale_fill_manual(values = method_colors) +
scale_color_manual(values = darker_set3) +
labs(
x = "Confounding Level",
y = "R2 (Bray-Curtis)") +
facet_wrap(~ Type, nrow = 1) +
scale_y_continuous(breaks = seq(0, 1, 0.1)) +
theme_bw() +
theme(
plot.title    = element_text(size = 14,  hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.title.x  = element_text(size = 12),
axis.text.x   = element_text(size = 10),
axis.title.y  = element_text(size = 12),
axis.text.y   = element_text(size = 10),
legend.title  = element_text(size = 10),
legend.text   = element_text(size = 9),
strip.text    = element_text(size = 12)
)
ggsave("../fig_r2/fig2cd_box.jpeg")
View(filter_case)
filter_case = c()
for(k in 1:(19760/40)){
if(AA$R2[(40*(k-1)+8)]>0.1){
filter_case = rbind(filter_case, AA[(40*(k-1)+1):(40*k),])
}
}
9960/40
# Create a subtitle that lists all unique covariate values
aa1 = filter_case
ggplot(aa1, aes(x = Covariate, y = R2, fill = Method, color = Method)) +
geom_boxplot(outlier.shape = NA) +
scale_fill_manual(values = method_colors) +
scale_color_manual(values = darker_set3) +
labs(
x = "Confounding Level",
y = "R2 (Bray-Curtis)") +
facet_wrap(~ Type, nrow = 1) +
scale_y_continuous(breaks = seq(0, 1, 0.1)) +
theme_bw() +
theme(
plot.title    = element_text(size = 14,  hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.title.x  = element_text(size = 12),
axis.text.x   = element_text(size = 10),
axis.title.y  = element_text(size = 12),
axis.text.y   = element_text(size = 10),
legend.title  = element_text(size = 10),
legend.text   = element_text(size = 9),
strip.text    = element_text(size = 12)
)
ggsave("../fig_r2/fig2cd_box.jpeg")
mean(AA$R2[which(AA$Method=="ConQuR" & AA$Covariate == "With Covariate" & AA$Type=="Biological Group")])
ggplot(aa1, aes(x = Covariate, y = R2, fill = Method, color = Method)) +
stat_summary(
fun = mean,
geom = "bar",
position = position_dodge(width = 0.9),
width = 0.7
) +
stat_summary(
fun.data = mean_se,
geom = "errorbar",
position = position_dodge(width = 0.9),
width = 0.2
) +
scale_fill_manual(values = method_colors) +
scale_color_manual(values = darker_set3) +
labs(
x = "Confounding Level",
y = "R2 (Bray-Curtis)"
) +
facet_wrap(~ Type, nrow = 1) +
scale_y_continuous(breaks = seq(0, 1, 0.1)) +
theme_bw() +
theme(
plot.title    = element_text(size = 14, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.title.x  = element_text(size = 12),
axis.text.x   = element_text(size = 10),
axis.title.y  = element_text(size = 12),
axis.text.y   = element_text(size = 10),
legend.title  = element_text(size = 10),
legend.text   = element_text(size = 9),
strip.text    = element_text(size = 12)
)
ggsave("../fig_r2/fig2cd_bar.jpeg")
pred = read.csv("../result/pred_sim1_r2.csv")
pred$Accuracy = as.numeric(pred$Accuracy)
pred$Method[which(pred$Method=="PLSDA")] = "PLSDA-batch"
pred$Method[which(pred$Method=="Percentile")] = "Percentile-Norm"
pred$Covariate[pred$Covariate=="with"] = "With Covariate"
pred$Covariate[pred$Covariate=="without"] = "Without Covariate"
unprocessed = pred[pred$Method=="Unprocessed",]
unprocessed$Covariate = "Without Covariate"
pred = rbind(pred,unprocessed)
pred1 = pred[pred$Type=="Sample",]
pred1$Method[which(pred1$Method=="DEBIASM")] = "DEBIAS-M"
pred1$Method = factor(pred1$Method, levels = c("Unprocessed", "Truth", "MetaDICT", "ConQuR", "ComBatSeq", "MMUPHin",  "Percentile-Norm", "PLSDA-batch",  "scANVI","DEBIAS-M","Single Dataset"))
method_colors <- c(
"Unprocessed"       = "#8DD3C7",  # teal
"Truth"             = "#FFFFB3",  # pale yellow
"MetaDICT"          = "#FB8072",  # lavender
"ComBatSeq"         = "#BEBADA",  # salmon
"MMUPHin"           = "#80B1D3",  # light blue
"ConQuR"            = "#FDB462",  # orange
"Percentile-Norm"   = "#B3DE69",  # light green
"PLSDA-batch"       = "#FCCDE5",  # pink
"DEBIAS-M"          = "#D9D9D9",  # light gray
"scANVI"            = "#BC80BD",  # purple
"Single Dataset"    = "#CCEBC5"   # mint green
)
library(ggplot2)
library(ggdist)
library(RColorBrewer)
ggplot(pred1, aes(x = Covariate, y = Accuracy, fill = Method)) +
# Draw the half-eye density (raincloud component)
ggdist::stat_halfeye(
## custom bandwidth
adjust = 1.5,
## adjust height
width = .8,
## move geom to the right
justification = -.2,
## remove slab interval
.width = 0,
point_colour = NA,
position = position_dodge(width = 0.8)
) +
geom_boxplot(
width = .3,
position = position_dodge(width = 0.8),
## remove outliers
outlier.color = NA ## `outlier.shape = NA` or `outlier.alpha = 0` works as well
) +
facet_wrap(~Algorithm) +
scale_fill_manual(values = method_colors) +
scale_color_manual(values = method_colors)+
labs(
x = "Adjust Batch Effect",
y = "ROC-AUC",
fill = "Method"
) +
scale_y_continuous(breaks = seq(0, 1, 0.1)) +
theme_bw() +
theme(
plot.title   = element_text(size = 16, hjust = 0.5),
axis.title.x = element_text(size = 14),
axis.text.x  = element_text(size = 12),
axis.title.y = element_text(size = 14),
axis.text.y  = element_text(size = 10),
legend.title = element_text(size = 14),
legend.text  = element_text(size = 12),
legend.position = "bottom",
strip.text   = element_text(size = 14)
)
ggsave("../fig_r2/pred_sim2.jpeg",dpi=300,units="in", width=12, height=5)
pred_nc = pred[which(pred$Type == "Negative Control"& pred$Covariate == "Without Covariate"),]
nc_table = data.frame("Accuracy" = numeric(), "Method" = character(), "Algorithm" = character())
i = 1
for(algo in c('K-NN','Random Forest')){
for(method in unique(pred_nc$Method)){
avg_acc = mean(pred_nc$Accuracy[which(pred_nc$Algorithm == algo & pred_nc$Method == method)])
nc_table[i,] = c(avg_acc,method,algo)
i = i+1
}
}
nc_table$Method[which(nc_table$Method=="DEBIASM")] = "DEBIAS-M"
nc_table = nc_table[which(nc_table$Method!="Unprocessed"),]
nc_table$Accuracy = as.numeric(nc_table$Accuracy)
nc_table$Method = factor(nc_table$Method,levels = c("Unprocessed", "Truth", "MetaDICT", "ConQuR", "ComBatSeq", "MMUPHin",  "Percentile-Norm", "PLSDA-batch",  "scANVI","DEBIAS-M","Single Dataset"))
library(ggplot2)
library(RColorBrewer)
ggplot(nc_table, aes(x = Algorithm, y = Accuracy, fill = Method)) +
geom_bar(stat = "identity",
position = position_dodge(width = 0.8),
alpha = 0.8,
width = 0.8) +
geom_abline(intercept = 0.5, slope = 0,
color = "black", linetype = "dashed", size = 1) +
labs(x = "Algorithm",
y = "Average ROC-AUC",
#title = "ROC-AUC by Algorithm and Method",
fill = "Method") +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.1)) +
scale_fill_manual(values = method_colors) +
theme_bw() +
theme(
plot.title   = element_text(size = 16,hjust = 0.5),
axis.title.x = element_text(size = 14),
axis.text.x  = element_text(size = 12),
axis.title.y = element_text(size = 14),
axis.text.y  = element_text(size = 10),
legend.title = element_text(size = 14),
legend.text  = element_text(size = 12),
legend.position = "bottom",
strip.text   = element_text(size = 14)
)
ggsave("../fig_r2/pred_sim3.jpeg",dpi=300,units="in", width=8, height=5)
library(ggplot2)
aa1 = read.csv("../result/fig2cd.csv", row.names = 1)
AA = aa1
AA$Method[which(AA$Method=="PLSDA")] = "PLSDA-batch"
AA$Method[which(AA$Method=="Percentile")] = "Percentile-Norm"
AA$Covariate = rep(c("Without Covariate","With Covariate"),(19760/2))
AA$Method = factor(AA$Method, levels = c("Unprocessed", "Truth", "MetaDICT", "ConQuR", "ComBatSeq", "MMUPHin",  "Percentile-Norm", "PLSDA-batch",  "scANVI","DEBIAS-M","Single Dataset"))
AA$Covariate[which(AA$Covariate == "Not observed")] = "Without Covariate"
AA$Covariate[which(AA$Covariate == "Observed")] = "With Covariate"
AA$Type[which(AA$Type=="batch")] = "Batch Variable"
AA$Type[which(AA$Type=="sample")] = "Biological Group"
filter_case = c()
for(k in 1:(19760/40)){
if(AA$R2[(40*(k-1)+8)]>0.1){
filter_case = rbind(filter_case, AA[(40*(k-1)+1):(40*k),])
}
}
# Create a subtitle that lists all unique covariate values
ggplot(aa1, aes(x = Covariate, y = R2, fill = Method, color = Method)) +
geom_boxplot(outlier.shape = NA) +
scale_fill_manual(values = method_colors) +
scale_color_manual(values = darker_set3) +
labs(
x = "Confounding Level",
y = "R2 (Bray-Curtis)") +
facet_wrap(~ Type, nrow = 1) +
scale_y_continuous(breaks = seq(0, 1, 0.1)) +
theme_bw() +
theme(
plot.title    = element_text(size = 14,  hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.title.x  = element_text(size = 12),
axis.text.x   = element_text(size = 10),
axis.title.y  = element_text(size = 12),
axis.text.y   = element_text(size = 10),
legend.title  = element_text(size = 10),
legend.text   = element_text(size = 9),
strip.text    = element_text(size = 12)
)
ggsave("../fig_r2/fig2cd_box.jpeg")
AA$Method = factor(AA$Method, levels = c("Unprocessed", "Truth", "MetaDICT", "ConQuR", "ComBatSeq", "MMUPHin",  "Percentile-Norm", "PLSDA-batch",  "scANVI","DEBIAS-M","Single Dataset"))
# Create a subtitle that lists all unique covariate values
ggplot(AA, aes(x = Covariate, y = R2, fill = Method, color = Method)) +
geom_boxplot(outlier.shape = NA) +
scale_fill_manual(values = method_colors) +
scale_color_manual(values = darker_set3) +
labs(
x = "Confounding Level",
y = "R2 (Bray-Curtis)") +
facet_wrap(~ Type, nrow = 1) +
scale_y_continuous(breaks = seq(0, 1, 0.1)) +
theme_bw() +
theme(
plot.title    = element_text(size = 14,  hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.title.x  = element_text(size = 12),
axis.text.x   = element_text(size = 10),
axis.title.y  = element_text(size = 12),
axis.text.y   = element_text(size = 10),
legend.title  = element_text(size = 10),
legend.text   = element_text(size = 9),
strip.text    = element_text(size = 12)
)
ggsave("../fig_r2/fig2cd_box.jpeg")
mean(AA$R2[which(AA$Method=="ConQuR" & AA$Covariate == "With Covariate" & AA$Type=="Biological Group")])
mean(AA$R2[which(AA$Method=="ConQuR" & AA$Covariate == "Without Covariate" & AA$Type=="Biological Group")])
ggplot(aa1, aes(x = Covariate, y = R2, fill = Method, color = Method)) +
stat_summary(
fun = mean,
geom = "bar",
position = position_dodge(width = 0.9),
width = 0.7
) +
stat_summary(
fun.data = mean_se,
geom = "errorbar",
position = position_dodge(width = 0.9),
width = 0.2
) +
scale_fill_manual(values = method_colors) +
scale_color_manual(values = darker_set3) +
labs(
x = "Confounding Level",
y = "R2 (Bray-Curtis)"
) +
facet_wrap(~ Type, nrow = 1) +
scale_y_continuous(breaks = seq(0, 1, 0.1)) +
theme_bw() +
theme(
plot.title    = element_text(size = 14, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.title.x  = element_text(size = 12),
axis.text.x   = element_text(size = 10),
axis.title.y  = element_text(size = 12),
axis.text.y   = element_text(size = 10),
legend.title  = element_text(size = 10),
legend.text   = element_text(size = 9),
strip.text    = element_text(size = 12)
)
ggsave("../fig_r2/fig2cd_bar.jpeg")
ggplot(AA, aes(x = Covariate, y = R2, fill = Method, color = Method)) +
stat_summary(
fun = mean,
geom = "bar",
position = position_dodge(width = 0.9),
width = 0.7
) +
stat_summary(
fun.data = mean_se,
geom = "errorbar",
position = position_dodge(width = 0.9),
width = 0.2
) +
scale_fill_manual(values = method_colors) +
scale_color_manual(values = darker_set3) +
labs(
x = "Confounding Level",
y = "R2 (Bray-Curtis)"
) +
facet_wrap(~ Type, nrow = 1) +
scale_y_continuous(breaks = seq(0, 1, 0.1)) +
theme_bw() +
theme(
plot.title    = element_text(size = 14, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.title.x  = element_text(size = 12),
axis.text.x   = element_text(size = 10),
axis.title.y  = element_text(size = 12),
axis.text.y   = element_text(size = 10),
legend.title  = element_text(size = 10),
legend.text   = element_text(size = 9),
strip.text    = element_text(size = 12)
)
ggsave("../fig_r2/fig2cd_bar.jpeg")
library(ecodist)
library(ggplot2)
library(vegan)
library(ConQuR)
library(doParallel)
library(MMUPHin)
library(bayesm)
library(ggpubr)
library(PLSDAbatch)
setwd("~/Desktop/Desktop - Bo’s MacBook Air/MetaDICT/")
devtools::document()
devtools::load_all()
knitr::opts_chunk$set(message = FALSE, warning = FALSE, comment = NA,
fig.width = 6.25, fig.height = 5)
library(tidyverse)
library(DT)
options(DT.options = list(
initComplete = JS("function(settings, json) {",
"$(this.api().table().header()).css({'background-color':
'#000', 'color': '#fff'});","}")))
# load data
data("exampleData")
# batch label
batchid = meta$batch
# PCoA plot
pcoa.plot.discrete(O,batchid,"Batch")
pkgload::dev_help('plot_singular_values')
plot_singular_values(O, meta)
devtools::load_all()
plot_singular_values(O, meta)
devtools::load_all()
plot_singular_values(O, meta)
plot_singular_values(O, meta)
devtools::document()
devtools::load_all()
plot_singular_values(O, meta)
devtools::document()
devtools::build()
devtools::build_vignettes()
devtools::document()
devtools::install(build_vignettes = TRUE)
vignette("MetaDICT")
